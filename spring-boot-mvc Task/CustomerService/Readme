maven 사용법

javac ./src/com/nhnacademy/hello/*.java -d ./out

cd ./out
jar --file  hello.jar --main-class com.nhnacademy.hello.Main -c ./com

java -jar hello.jar

jar -tf hello.jar

패키징 해제
unzip hello.jar

mvn 파일들 제거
mvn clean

mvn 패키징을 위한 컴파일
mvn compile

mvn 패키징
mvn package 

패키징 jar파일 실행
java -jar hello.jar


실행가능한 jar 만들기 1
* pom.xml → <build><plugins> 새로  <plugins>  </plugins> 를 생성해서 이안에 dependency 내용 삽입
* lib파일에 다른 jar파일들을 참조하여 실행되기 때문에 lib폴더도 같이 존재해야된다.

<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-dependency-plugin</artifactId>
    <executions>
      <execution>
        <id>copy-dependencies</id>
        <phase>prepare-package</phase>
        <goals>
          <goal>copy-dependencies</goal>
        </goals>
        <configuration>
          <outputDirectory>
            ${project.build.directory}/libs
          </outputDirectory>
        </configuration>
      </execution>
    </executions>
</plugin>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <configuration>
      <archive>
        <manifest>
          <addClasspath>true</addClasspath>
          <classpathPrefix>libs/</classpathPrefix>
          <mainClass>
            com.nhnacademy.app.movie.MovieMain
          </mainClass>
        </manifest>
      </archive>
    </configuration>
</plugin>


실행가능한 jar 만들기 2 - Shade ( uber-jar, fat-jar )
* 즉 uber-jar는 하나의 jar 파일에 package의 모든 dependency를 포함합니다.
* shaded방식 사용시 shaded.jar파일을 실행시켜야함

<plugins>
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-shade-plugin</artifactId>
    <executions>
      <execution>
        <goals>
          <goal>shade</goal>
        </goals>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>com.nhnacademy.app.movie.MovieMain</mainClass>
            </transformer>
          </transformers>
        </configuration>
      </execution>
    </executions>
  </plugin>
</plugins>





























